/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jani.noppapeli;

import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Jani
 */
public class NoppaPeli extends javax.swing.JFrame {

    /**
     * Creates new form NoppaPeli
     */
    Noppa pelaajaNoppa1;
    Noppa pelaajaNoppa2;
    Noppa koneNoppa1;
    Noppa koneNoppa2;
    int koneSumma = 0;
    int pelaajaSumma = 0;
    int peliVoitot = 0;
    int peliHaviot = 0;
    int peliTasapelit = 0;
    public NoppaPeli() {
        initComponents();
        pelaajaNoppa1 = new Noppa();
        pelaajaNoppa2 = new Noppa();
        koneNoppa1 = new Noppa();
        koneNoppa2 = new Noppa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnHeita = new javax.swing.JButton();
        jlblNoppa1 = new javax.swing.JLabel();
        jlblNoppa2 = new javax.swing.JLabel();
        jlblPelaajaSumma = new javax.swing.JLabel();
        jlblKoneSumma = new javax.swing.JLabel();
        jbtnAlaheita = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jlblVoitot = new javax.swing.JLabel();
        jlblHaviot = new javax.swing.JLabel();
        jlblTasapelit = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventti");

        jbtnHeita.setText("Heitä");
        jbtnHeita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHeitaActionPerformed(evt);
            }
        });

        jlblPelaajaSumma.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jlblPelaajaSumma.setText("Pelaaja Summa: ");

        jlblKoneSumma.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jlblKoneSumma.setText("Kone Summa: ");

        jbtnAlaheita.setText("Älä heitä");
        jbtnAlaheita.setEnabled(false);
        jbtnAlaheita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAlaheitaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel1.setText("Voitot:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel2.setText("Häviöt:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel3.setText("Tasapelit:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlblNoppa1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlblNoppa2)
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlblPelaajaSumma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addComponent(jlblKoneSumma)
                        .addGap(88, 88, 88))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblVoitot)
                    .addComponent(jlblTasapelit)
                    .addComponent(jlblHaviot))
                .addGap(52, 52, 52)
                .addComponent(jbtnHeita)
                .addGap(33, 33, 33)
                .addComponent(jbtnAlaheita)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblPelaajaSumma)
                    .addComponent(jlblKoneSumma))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblNoppa1)
                    .addComponent(jlblNoppa2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtnHeita)
                        .addComponent(jbtnAlaheita))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jlblVoitot))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jlblHaviot))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jlblTasapelit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean peliAly_koneHeittaa() {
        if (koneSumma < 16 || koneSumma < pelaajaSumma) {
            koneNoppa1.heita();
            koneNoppa2.heita();
            koneSumma += koneNoppa1.haeLuku() + koneNoppa2.haeLuku();
            jlblKoneSumma.setText(String.format("Kone summa: %d", koneSumma));
            return true;
        }
        else {
            return false;
        }
    }
    
    private void peliNollaa() {
        pelaajaSumma = 0;
        koneSumma = 0;
        jbtnAlaheita.setEnabled(false);
        jlblVoitot.setText(String.valueOf(peliVoitot));
        jlblHaviot.setText(String.valueOf(peliHaviot));
        jlblTasapelit.setText(String.valueOf(peliTasapelit));
    }
    private void peliTarkistaPisteet(boolean viimeinenHeitto) {
        // Pelaaja heitti 21
        if (pelaajaSumma == 21 ){ 
            JOptionPane.showInternalMessageDialog(null, String.format("Heitit 21! Voitit pelin.", koneSumma));
            peliVoitot++;
            peliNollaa();
            return;
        }
        // Kone heitti 21
        if (koneSumma == 21 ){ 
            JOptionPane.showInternalMessageDialog(null, String.format("Kone heitti 21! Hävisit pelin.", koneSumma));
            peliHaviot++;
            peliNollaa();
            return;
        }
        // Jos kummatkin heitti yli 21
        if (pelaajaSumma > 21 && koneSumma > 21) {
            JOptionPane.showInternalMessageDialog(null, String.format("Kummatkin heitti yli 21, tasapeli.", koneSumma));
            peliTasapelit++;
            peliNollaa();
            return;
        }
        // Jos pelaaja heitti yli 21
        if (pelaajaSumma > 21) {
            JOptionPane.showInternalMessageDialog(null, String.format("Heitit yli 21, kone voitti kädellä %d", koneSumma));
            peliHaviot++;
            peliNollaa();
            return;
        }
        // Jos kone heitti yli 21
        if (koneSumma > 21) {
            JOptionPane.showInternalMessageDialog(null, String.format("Kone heitti yli 21, voitit kädellä %d", pelaajaSumma));
            peliVoitot++;
            peliNollaa();
            return;
        }
        // Kaikki on heittänyt, tarkistetaan kenellä on suurin käsi.
        if (viimeinenHeitto) {
            if (pelaajaSumma > koneSumma) {
                JOptionPane.showInternalMessageDialog(null, String.format("Voitit kädellä %d, koneella oli käsi %d", pelaajaSumma, koneSumma));
                peliVoitot++;
                peliNollaa();
                return;
            }
            else if (koneSumma > pelaajaSumma) {
                JOptionPane.showInternalMessageDialog(null, String.format("Hävisit kädellä %d, koneella oli käsi %d", pelaajaSumma, koneSumma));
                peliHaviot++;
                peliNollaa();
                return;
            }
            else {
                JOptionPane.showInternalMessageDialog(null, String.format("Tasapeli kädellä %d, koneella oli käsi %d", pelaajaSumma, koneSumma));
                peliTasapelit++;
                peliNollaa();
                return;
            }   
        }
    }
    private void pelaajaHeittaa() {
        // Pelaaja voi heittää
        if (pelaajaSumma < 21) {
            pelaajaNoppa1.heita();
            pelaajaNoppa2.heita();

            jlblNoppa1.setIcon(pelaajaNoppa1.haeKuva());
            jlblNoppa2.setIcon(pelaajaNoppa2.haeKuva());

            pelaajaSumma += pelaajaNoppa1.haeLuku() + pelaajaNoppa2.haeLuku();
            jlblPelaajaSumma.setText(String.format("Pelaaja summa: %d", pelaajaSumma));
        }
    }
    private void peliKasitteleVuoro(boolean pelaajaHeittaa) {
        if (pelaajaHeittaa) {
            // Pelaajan heitto
            jbtnAlaheita.setEnabled(true);
            pelaajaHeittaa();
            // Koneen heitto
            peliAly_koneHeittaa();
            // Tarkista pelin tilanne
            peliTarkistaPisteet(false);
        }
        else {
            // Kone heittelee nopat
            while (peliAly_koneHeittaa()) {
            }
            // Tarkistetaan tilanne viimeisen kerran
            peliTarkistaPisteet(true);
        }
    }
    
    private void jbtnHeitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHeitaActionPerformed
        peliKasitteleVuoro(true);
    }//GEN-LAST:event_jbtnHeitaActionPerformed

    private void jbtnAlaheitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAlaheitaActionPerformed
        peliKasitteleVuoro(false);
    }//GEN-LAST:event_jbtnAlaheitaActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NoppaPeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NoppaPeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NoppaPeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NoppaPeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NoppaPeli().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jbtnAlaheita;
    private javax.swing.JButton jbtnHeita;
    private javax.swing.JLabel jlblHaviot;
    private javax.swing.JLabel jlblKoneSumma;
    private javax.swing.JLabel jlblNoppa1;
    private javax.swing.JLabel jlblNoppa2;
    private javax.swing.JLabel jlblPelaajaSumma;
    private javax.swing.JLabel jlblTasapelit;
    private javax.swing.JLabel jlblVoitot;
    // End of variables declaration//GEN-END:variables
}
